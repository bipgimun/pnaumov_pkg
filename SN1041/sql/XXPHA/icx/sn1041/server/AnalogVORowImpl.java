package xxpha.oracle.apps.icx.sn1041.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AnalogVORowImpl extends OAViewRowImpl {
    public static final int SEGMENT1 = 0;
    public static final int ORGANIZATIONID = 1;
    public static final int RELATEDITEMID = 2;
    public static final int RELATEDITEMDESCRIPTION = 3;
    public static final int ATTRNUM1 = 4;
    public static final int STARTDATE = 5;
    public static final int ENDDATE = 6;
    public static final int TYPEDESCR = 7;
    public static final int PRIMARYUNITOFMEASURE = 8;
    public static final int CSTOTALQTY = 9;
    public static final int CSAVAILQTY = 10;
    public static final int STOREQUANTITY = 11;
    public static final int STOREAVAILABLEQUANTITY = 12;
    public static final int HOLDINGSTOREQUANTITY = 13;
    public static final int HOLNGSTOREAVAILABLEQUANTITY = 14;
    public static final int SELECTED = 15;
    public static final int PRICE = 16;
    public static final int PRICEVIEW = 17;

    /**This is the default constructor (do not remove)
     */
    public AnalogVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute Segment1
     */
    public String getSegment1() {
        return (String) getAttributeInternal(SEGMENT1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Segment1
     */
    public void setSegment1(String value) {
        setAttributeInternal(SEGMENT1, value);
    }

    /**Gets the attribute value for the calculated attribute OrganizationId
     */
    public Number getOrganizationId() {
        return (Number) getAttributeInternal(ORGANIZATIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute OrganizationId
     */
    public void setOrganizationId(Number value) {
        setAttributeInternal(ORGANIZATIONID, value);
    }

    /**Gets the attribute value for the calculated attribute RelatedItemId
     */
    public Number getRelatedItemId() {
        return (Number) getAttributeInternal(RELATEDITEMID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelatedItemId
     */
    public void setRelatedItemId(Number value) {
        setAttributeInternal(RELATEDITEMID, value);
    }

    /**Gets the attribute value for the calculated attribute RelatedItemDescription
     */
    public String getRelatedItemDescription() {
        return (String) getAttributeInternal(RELATEDITEMDESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RelatedItemDescription
     */
    public void setRelatedItemDescription(String value) {
        setAttributeInternal(RELATEDITEMDESCRIPTION, value);
    }

    /**Gets the attribute value for the calculated attribute AttrNum1
     */
    public String getAttrNum1() {
        return (String) getAttributeInternal(ATTRNUM1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AttrNum1
     */
    public void setAttrNum1(String value) {
        setAttributeInternal(ATTRNUM1, value);
    }

    /**Gets the attribute value for the calculated attribute StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**Gets the attribute value for the calculated attribute EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**Gets the attribute value for the calculated attribute TypeDescr
     */
    public String getTypeDescr() {
        return (String) getAttributeInternal(TYPEDESCR);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TypeDescr
     */
    public void setTypeDescr(String value) {
        setAttributeInternal(TYPEDESCR, value);
    }

    /**Gets the attribute value for the calculated attribute PrimaryUnitOfMeasure
     */
    public String getPrimaryUnitOfMeasure() {
        return (String) getAttributeInternal(PRIMARYUNITOFMEASURE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PrimaryUnitOfMeasure
     */
    public void setPrimaryUnitOfMeasure(String value) {
        setAttributeInternal(PRIMARYUNITOFMEASURE, value);
    }

    /**Gets the attribute value for the calculated attribute CsTotalQty
     */
    public Number getCsTotalQty() {
        return (Number) getAttributeInternal(CSTOTALQTY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CsTotalQty
     */
    public void setCsTotalQty(Number value) {
        setAttributeInternal(CSTOTALQTY, value);
    }

    /**Gets the attribute value for the calculated attribute CsAvailQty
     */
    public Number getCsAvailQty() {
        return (Number) getAttributeInternal(CSAVAILQTY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CsAvailQty
     */
    public void setCsAvailQty(Number value) {
        setAttributeInternal(CSAVAILQTY, value);
    }

    /**Gets the attribute value for the calculated attribute StoreQuantity
     */
    public Number getStoreQuantity() {
        return (Number) getAttributeInternal(STOREQUANTITY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StoreQuantity
     */
    public void setStoreQuantity(Number value) {
        setAttributeInternal(STOREQUANTITY, value);
    }

    /**Gets the attribute value for the calculated attribute StoreAvailableQuantity
     */
    public Number getStoreAvailableQuantity() {
        return (Number) getAttributeInternal(STOREAVAILABLEQUANTITY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StoreAvailableQuantity
     */
    public void setStoreAvailableQuantity(Number value) {
        setAttributeInternal(STOREAVAILABLEQUANTITY, value);
    }

    /**Gets the attribute value for the calculated attribute HoldingStoreQuantity
     */
    public Number getHoldingStoreQuantity() {
        return (Number) getAttributeInternal(HOLDINGSTOREQUANTITY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HoldingStoreQuantity
     */
    public void setHoldingStoreQuantity(Number value) {
        setAttributeInternal(HOLDINGSTOREQUANTITY, value);
    }

    /**Gets the attribute value for the calculated attribute HolngStoreAvailableQuantity
     */
    public Number getHolngStoreAvailableQuantity() {
        return (Number) getAttributeInternal(HOLNGSTOREAVAILABLEQUANTITY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute HolngStoreAvailableQuantity
     */
    public void setHolngStoreAvailableQuantity(Number value) {
        setAttributeInternal(HOLNGSTOREAVAILABLEQUANTITY, value);
    }

    /**Gets the attribute value for the calculated attribute Selected
     */
    public String getSelected() {
        return (String) getAttributeInternal(SELECTED);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Selected
     */
    public void setSelected(String value) {
        setAttributeInternal(SELECTED, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SEGMENT1:
            return getSegment1();
        case ORGANIZATIONID:
            return getOrganizationId();
        case RELATEDITEMID:
            return getRelatedItemId();
        case RELATEDITEMDESCRIPTION:
            return getRelatedItemDescription();
        case ATTRNUM1:
            return getAttrNum1();
        case STARTDATE:
            return getStartDate();
        case ENDDATE:
            return getEndDate();
        case TYPEDESCR:
            return getTypeDescr();
        case PRIMARYUNITOFMEASURE:
            return getPrimaryUnitOfMeasure();
        case CSTOTALQTY:
            return getCsTotalQty();
        case CSAVAILQTY:
            return getCsAvailQty();
        case STOREQUANTITY:
            return getStoreQuantity();
        case STOREAVAILABLEQUANTITY:
            return getStoreAvailableQuantity();
        case HOLDINGSTOREQUANTITY:
            return getHoldingStoreQuantity();
        case HOLNGSTOREAVAILABLEQUANTITY:
            return getHolngStoreAvailableQuantity();
        case SELECTED:
            return getSelected();
        case PRICE:
            return getPrice();
        case PRICEVIEW:
            return getPriceView();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SELECTED:
            setSelected((String)value);
            return;
        case PRICE:
            setPrice((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute Price
     */
    public Number getPrice() {
        return (Number) getAttributeInternal(PRICE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Price
     */
    public void setPrice(Number value) {
        setAttributeInternal(PRICE, value);
    }

    /**Gets the attribute value for the calculated attribute PriceView
     */
    public String getPriceView() {
        double price = 0;
        if (getPrice() != null)
            price = getPrice().getValue();
        return String.format("%.2f", price);
        //return (String) getAttributeInternal(PRICEVIEW);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PriceView
     */
    public void setPriceView(String value) {
        setAttributeInternal(PRICEVIEW, value);
    }
}
